name: Build EXE Installer

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package

      - name: Debug - Check Maven output
        run: |
          Write-Host "Contents of target directory:"
          if (Test-Path "target") {
            Get-ChildItem target -Filter "*.jar" | ForEach-Object {
              Write-Host "Found JAR: $($_.Name) ($(($_.Length / 1MB).ToString('F2')) MB)"
            }
          } else {
            Write-Host "Target directory not found!"
          }
          
          Write-Host "Launch4j config file:"
          if (Test-Path "launch4j-config.xml") {
            Get-Content "launch4j-config.xml"
          } else {
            Write-Host "launch4j-config.xml not found!"
          }

      - name: Download and Extract Launch4j
        run: |
          curl -L -o launch4j.zip https://sourceforge.net/projects/launch4j/files/launch4j-3/3.50/launch4j-3.50-win32.zip/download
          Expand-Archive -Path launch4j.zip -DestinationPath . -Force
          
      - name: Create EXE using Launch4j
        run: |
          # Try common paths where launch4j.exe might be
          $possiblePaths = @(
            ".\launch4j-3.50\launch4j.exe",
            ".\launch4j\launch4j.exe",
            ".\launch4j.exe"
          )
          
          $launch4jPath = $null
          foreach ($path in $possiblePaths) {
            if (Test-Path $path) {
              $launch4jPath = $path
              Write-Host "Found launch4j.exe at: $path"
              break
            }
          }
          
          if (-not $launch4jPath) {
            Write-Host "Searching for launch4j.exe recursively..."
            $found = Get-ChildItem -Recurse -Filter "launch4j.exe" | Select-Object -First 1
            if ($found) {
              $launch4jPath = $found.FullName
              Write-Host "Found launch4j.exe at: $launch4jPath"
            }
          }
          
          if ($launch4jPath) {
            Write-Host "Running Launch4j with config: launch4j-config.xml"
            & $launch4jPath launch4j-config.xml
            if ($LASTEXITCODE -ne 0) {
              Write-Host "Launch4j failed with exit code: $LASTEXITCODE"
              exit 1
            }
          } else {
            Write-Host "ERROR: launch4j.exe not found anywhere!"
            Get-ChildItem -Recurse -Name | Write-Host
            exit 1
          }

      - name: Verify EXE creation
        run: |
          Write-Host "Checking for created EXE files..."
          Get-ChildItem -Filter "*.exe" -Recurse | ForEach-Object {
            Write-Host "Found EXE: $($_.FullName)"
          }
          
          # Check if the expected DungeonMaster.exe exists
          if (-not (Test-Path "DungeonMaster.exe")) {
            Write-Host "ERROR: DungeonMaster.exe was not created!"
            Write-Host "Contents of current directory:"
            Get-ChildItem | Format-Table Name, Length, LastWriteTime
            Write-Host "Launch4j config file contents:"
            if (Test-Path "launch4j-config.xml") {
              Get-Content "launch4j-config.xml"
            } else {
              Write-Host "launch4j-config.xml not found!"
            }
            exit 1
          } else {
            Write-Host "SUCCESS: DungeonMaster.exe found!"
            Get-Item "DungeonMaster.exe" | Format-List Name, Length, LastWriteTime
          }

      - name: Install Inno Setup
        run: choco install innosetup -y

      - name: Create installer using Inno Setup
        run: iscc installer.iss

      - name: Upload installer
        uses: actions/upload-artifact@v4
        with:
          name: DungeonMasterInstaller
          path: Output/*.exe